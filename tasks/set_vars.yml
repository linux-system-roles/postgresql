---
- name: Ensure ansible_facts used by role
  setup:
    gather_subset: "{{ __postgresql_required_facts_subsets }}"
  when: __postgresql_required_facts |
    difference(ansible_facts.keys() | list) | length > 0

- name: Ensure correct package manager for ostree systems
  vars:
    ostree_pkg_mgr: ansible.posix.rhel_rpm_ostree
    ostree_booted_file: /run/ostree-booted
  when: ansible_facts.pkg_mgr | d("") != ostree_pkg_mgr
  block:
    - name: Check if system is ostree
      stat:
        path: "{{ ostree_booted_file }}"
      register: __ostree_booted_stat

    - name: Set package manager to use for ostree
      ansible.utils.update_fact:
        updates:
          - path: ansible_facts.pkg_mgr
            value: "{{ ostree_pkg_mgr }}"
      when: __ostree_booted_stat.stat.exists

- name: Set platform/version specific variables
  include_vars: "{{ __vars_file }}"
  loop:
    - "{{ ansible_facts['os_family'] }}.yml"
    - "{{ ansible_facts['distribution'] }}.yml"
    - >-
      {{ ansible_facts['distribution'] ~ '_' ~
      ansible_facts['distribution_major_version'] }}.yml
    - >-
      {{ ansible_facts['distribution'] ~ '_' ~
      ansible_facts['distribution_version'] }}.yml
  vars:
    __vars_file: "{{ role_path }}/vars/{{ item }}"
  when: __vars_file is file

- name: Check postgresql.conf
  stat:
    path: "{{ __postgresql_main_conf_file }}"
  register: __postgresql_conf

- name: Check TLS crt file
  stat:
    path: "{{ postgresql_cert_name }}.crt"
  register: __postgresql_cert

- name: Check TLS private key file
  stat:
    path: "{{ postgresql_cert_name }}.key"
  register: __postgresql_key
